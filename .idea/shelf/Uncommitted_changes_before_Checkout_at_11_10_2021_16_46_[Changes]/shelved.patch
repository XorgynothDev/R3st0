Index: modele/metier/Utilisateur.class.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nnamespace modele\\metier;\n\n/**\n * Description of Utilisateur\n * Données relatives à un utilisateur du site resto\n * @author N. Bourgeois\n * @version 07/2021\n */\nclass Utilisateur {\n    /** @var int identifiant, valeur auto-incrémentée dans la BDD  */\n    private int $idU;\n    /** @var string adresse de courrier électronique */\n    private string $mailU; \n    /** @var string mot de passe chiffré */\n    private ?string $mdpU;\n    /** @var string pseudonyme */\n    private ?string $pseudoU;\n    /** @var array tableau<TypesCuisine> liste des types de cuisine préférés par l'utilisateur */\n    private array $lesTypesCuisinePreferes;\n    /** @var array tableau<Resto> : liste des restaurants \"aimés\" par l'utilisateur */\n    private array $lesRestosAimes;\n\n    /** @var bool admin<Resto> : Retourne true si l'utilsateur est un administrateur et false si echec */\n    private bool $admin;\n    \n    function __construct(int $idU, string $mailU, ?string $mdpU, ?string $pseudoU, bool $admin) {\n        $this->idU = $idU;\n        $this->mailU = $mailU;\n        $this->mdpU = $mdpU;\n        $this->pseudoU = $pseudoU;\n        $this->lesTypesCuisinePreferes = array();\n        $this->lesRestosAimes = array();\n\n        $administrator = false;\n\n        if($admin == 1) $administrator = true;\n\n        $this->admin = $administrator;\n    }\n    \n    public function __toString() {\n        return get_class().\"{id=\".$this->idU.\", mail=\".$this->mailU.\" ,mdp=\".$this->mdpU.\" ,pseudo=\".$this->pseudoU.\",admin=\" . $this->admin . \"... }\" ;\n    }    \n\n    function getIdU(): int {\n        return $this->idU;\n    }\n\n    function getMailU(): string {\n        return $this->mailU;\n    }\n\n    function getMdpU(): ?string {\n        return $this->mdpU;\n    }\n\n    function getPseudoU(): ?string {\n        return $this->pseudoU;\n    }\n\n    function getLesTypesCuisinePreferes(): array {\n        return $this->lesTypesCuisinePreferes;\n    }\n\n    function getLesRestosAimes(): array {\n        return $this->lesRestosAimes;\n    }\n\n    function setIdU(int $idU): void {\n        $this->idU = $idU;\n    }\n\n    function setMailU(string $mailU): void {\n        $this->mailU = $mailU;\n    }\n\n    function setMdpU(string $mdpU): void {\n        $this->mdpU = $mdpU;\n    }\n\n    function setPseudoU(string $pseudoU): void {\n        $this->pseudoU = $pseudoU;\n    }\n\n    function setLesTypesCuisinePreferes(array $lesTC): void {\n        $this->lesTypesCuisinePreferes = $lesTC;\n    }\n\n    function setLesRestosAimes(array $lesRestosAimes): void {\n        $this->lesRestosAimes = $lesRestosAimes;\n    }\n\n    function isAdministrator() {\n        return $this->admin;\n    }\n    \n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/modele/metier/Utilisateur.class.php b/modele/metier/Utilisateur.class.php
--- a/modele/metier/Utilisateur.class.php	
+++ b/modele/metier/Utilisateur.class.php	
@@ -96,4 +96,4 @@
         return $this->admin;
     }
     
-}
+}
\ No newline at end of file
Index: vue/vueDetailResto.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n/**\n * --------------\n * vueDetailResto\n * --------------\n * \n * @version 07/2021 par NB : intégration couche modèle objet\n * \n * Variables transmises par le contrôleur detailResto contenant les données à afficher : \n  ---------------------------------------------------------------------------------------- */\n/** @var Resto  $unResto restaurant à afficher */\n/** @var array $lesTypesCuisine  */\n/** @var array $lesPhotos  */\n/** @var float $noteMoy note moyenne des critiues du restaurant */\n/** @var int $idU  */\n/** @var string $mailU  */\n/** @var bool $aimer  */\n/** @var array $critiques  */\n/** @var Critique $maCritique  */\n/** @var string $monCommentaire */\n/**\n * Variables supplémentaires :  \n  ------------------------- */\n/** @var TypeCuisine $leTC */\n/** @var Photo $laPhoto */\n/** @var Critique $uneCritique */\n?>\n\n<h1><?= $unResto->getNomR(); ?>\n\n    <?php if ($aimer != false) { ?>\n        <a href=\"./?action=aimer&idR=<?= $unResto->getIdR(); ?>\" ><img class=\"aimer\" src=\"images/aime.png\" alt=\"j'aime ce restaurant\"></a>\n    <?php } else { ?>\n        <a href=\"./?action=aimer&idR=<?= $unResto->getIdR(); ?>\" ><img class=\"aimer\" src=\"images/aimepas.png\" alt=\"je n'aime pas encore ce restaurant\"></a>\n    <?php } ?>\n\n</h1>\n\n<span id=\"note\">\n    <?php\n    echo \\modele\\dao\\CritiqueDAO::getNoteMoyenneByIdR($unResto->getIdR()) . \"/5\";\n    for ($i = 1; $i <= 5; $i++) { ?>\n        <a class=\"aimer\" href=\"./?action=noter&note=<?= $i ?>&idR=<?= $unResto->getIdR(); ?>\" >\n            <?php if ($i <= $noteMoy) { ?>\n                <img class=\"note\" src=\"images/like.png\" alt=\"\">\n            <?php } else {\n                ?>\n                <img class=\"note\" src=\"images/neutre.png\" alt=\"line neutre\">\n            <?php } ?>\n        </a>\n    <?php } ?>\n</span>\n<section>\n    Cuisine <br />\n    <ul id=\"tagFood\">\t\t\n        <?php\n        foreach ($lesTypesCuisine as $leTC) {\n            ?>\n            <li class=\"tag\"><span class=\"tag\">#</span><?= $leTC->getLibelleTC() ?></li>\n            <?php }\n        ?>\n    </ul>\n\n</section>\n<p id=\"principal\">\n    <?php\n    if (count($lesPhotos) > 0) {\n        $laPhoto = $lesPhotos[0]; // photo principale = la première de la liste\n        ?>\n        <img src=\"photos/<?= $laPhoto->getCheminP() ?>\" alt=\"photo du restaurant\" />\n    <?php } ?>\n    <br />\n    <?= $unResto->getDescR(); ?>\n</p>\n<h2 id=\"adresse\">\n    Adresse\n</h2>\n<p>\n    <?= $unResto->getNumAdr(); ?>\n    <?= $unResto->getVoieAdr(); ?><br />\n    <?= $unResto->getCpR(); ?>\n    <?= $unResto->getVilleR(); ?>\n\n</p>\n\n<h2 id=\"photos\">\n    Photos\n</h2>\n<ul id=\"galerie\">\n    <?php\n    foreach ($lesPhotos as $laPhoto) {\n        ?>\n        <li> <img class=\"galerie\" src=\"photos/<?= $laPhoto->getCheminP() ?>\" alt=\"\" /></li>\n        <?php\n    }\n    ?>\n\n</ul>\n\n<h2 id=\"horaires\">\n    Horaires\n</h2> \n<?= $unResto->getHorairesR(); ?>\n\n\n<h2 id=\"crit\">Critiques</h2>\n\n<ul id=\"critiques\">\n    <?php\n    foreach ($critiques as $uneCritique) {\n        ?>\n        <li>\n            <span>\n                <?= $uneCritique->getLeUtilisateur()->getPseudoU() ?> \n                <?php\n                // Si la critique est émise par l'utilisteur actuellement connecté\n                if ($uneCritique->getLeUtilisateur()->getIdU() == $idU) {\n                    // Il doit pouvoir la supprimer\n                    ?>\n                    <a href='./?action=supprimerCritique&idR=<?= $unResto->getIdR(); ?>'>Supprimer</a>\n                <?php } ?>\n            </span>\n            <div>\n                <span>\n                    <?php\n                    // Si une note a été émise\n                    if ($uneCritique->getNote()) {\n                        // L'afficher\n                        ?>\n                        <?= $uneCritique->getNote() ?>/5\n                        <?php\n                    }\n                    ?>\n                </span>\n                <span><?= $uneCritique->getCommentaire() ?> </span>\n            </div>\n\n        </li>\n    <?php } ?>\n\n</ul>\n\n<?php\nif ($mailU) {\n    ?>\n    <form action=\"./?action=commenter&idR=<?= $unResto->getIdR(); ?>\" method=\"POST\">\n        <textarea id=\"commentaireForm\" name=\"commentaire\"><?= $monCommentaire ?></textarea><br />\n        <input type=\"submit\" value=\"Enregistrer le commentaire\" />\n    </form>\n\n    <?php\n}\n?>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vue/vueDetailResto.php b/vue/vueDetailResto.php
--- a/vue/vueDetailResto.php	
+++ b/vue/vueDetailResto.php	
@@ -40,7 +40,7 @@
     <?php
     echo \modele\dao\CritiqueDAO::getNoteMoyenneByIdR($unResto->getIdR()) . "/5";
     for ($i = 1; $i <= 5; $i++) { ?>
-        <a class="aimer" href="./?action=noter&note=<?= $i ?>&idR=<?= $unResto->getIdR(); ?>" >
+        <a class="aimer" href="./index.php?action=noter&note=<?= $i ?>&idR=<?= $unResto->getIdR(); ?>" >
             <?php if ($i <= $noteMoy) { ?>
                 <img class="note" src="images/like.png" alt="">
             <?php } else {
@@ -117,7 +117,7 @@
                 if ($uneCritique->getLeUtilisateur()->getIdU() == $idU) {
                     // Il doit pouvoir la supprimer
                     ?>
-                    <a href='./?action=supprimerCritique&idR=<?= $unResto->getIdR(); ?>'>Supprimer</a>
+                    <a href='./index.php?action=supprimerCritique&idR=<?= $unResto->getIdR(); ?>'>Supprimer</a>
                 <?php } ?>
             </span>
             <div>
